
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Aluno
 */
public class CadPessoa extends javax.swing.JFrame {

    /**
     * Creates new form CadPessoa
     */
    public CadPessoa() throws SQLException {
        initComponents();
        popularTabelaPessoas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextEmail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboSerie = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jComboAdm = new javax.swing.JComboBox<>();
        jPassSenha = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        btnSalvarPessoa = new javax.swing.JButton();
        jTextNomePesquisa = new javax.swing.JTextField();
        jComboTipoPessoa = new javax.swing.JComboBox<>();
        bntExcluir = new javax.swing.JButton();
        bntEditar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPessoa = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nome:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Email:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Série:");

        jComboSerie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1ª Série", "2ª Série", "3ª Série", "Professor", "Funcionário" }));
        jComboSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboSerieActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("ADM:");

        jComboAdm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não", "Sim" }));
        jComboAdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboAdmActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Senha:");

        btnSalvarPessoa.setBackground(new java.awt.Color(34, 16, 111));
        btnSalvarPessoa.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSalvarPessoa.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvarPessoa.setText("Salvar Pessoa");
        btnSalvarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPessoaActionPerformed(evt);
            }
        });

        jTextNomePesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNomePesquisaActionPerformed(evt);
            }
        });
        jTextNomePesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextNomePesquisaKeyPressed(evt);
            }
        });

        jComboTipoPessoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboTipoPessoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo pessoa", "1ª Série", "2ª Série", "3ª Série", "Professor", "Funcionário" }));
        jComboTipoPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboTipoPessoaActionPerformed(evt);
            }
        });

        bntExcluir.setBackground(new java.awt.Color(153, 0, 0));
        bntExcluir.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bntExcluir.setForeground(new java.awt.Color(255, 255, 255));
        bntExcluir.setText("Excluir");
        bntExcluir.setEnabled(false);
        bntExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntExcluirActionPerformed(evt);
            }
        });

        bntEditar.setBackground(new java.awt.Color(34, 16, 111));
        bntEditar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        bntEditar.setForeground(new java.awt.Color(255, 255, 255));
        bntEditar.setText("Editar");
        bntEditar.setEnabled(false);
        bntEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntEditarActionPerformed(evt);
            }
        });

        tabelaPessoa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "EMAIL", "SÉRIE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPessoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPessoaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaPessoa);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSalvarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboAdm, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboSerie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextEmail)
                            .addComponent(jPassSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bntExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextNomePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboTipoPessoa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboTipoPessoa)
                            .addComponent(jTextNomePesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bntExcluir)
                            .addComponent(bntEditar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextNome, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboSerie, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboAdm, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPassSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSalvarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboSerieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboSerieActionPerformed

    private void jComboAdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboAdmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboAdmActionPerformed

    private void btnSalvarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPessoaActionPerformed
        String nome = jTextNome.getText();
        String email = jTextEmail.getText();
        String senha = String.valueOf(jPassSenha.getPassword());

        String serie = jComboSerie.getSelectedItem().toString();
        String adm = jComboAdm.getSelectedItem().toString();

        if (adm.equals("Sim")) {
            if (senha.equals("")) {
                JOptionPane.showMessageDialog(null, "OPS! Informe uma senha.");
            return;
            }            
        }

        if (nome.equals("") || email.equals("")) {
            JOptionPane.showMessageDialog(null, "OPS! Preencha todos os campos corretamente.");
        }else{
            try {
                Conexao con = new Conexao();
                
                Statement st = con.conexao.createStatement();
                
                String sql = "INSERT INTO pessoas (nome, email, serie, senha, isAdmin) VALUES ('"+nome+"', '"+email+"', '"+serie+"', '"+senha+"', '"+adm+"')";
                
                if(st.execute(sql)){
                    JOptionPane.showMessageDialog(null, "OPS! Tivemos um erro aqui.");
                    System.out.println("Teste erro");
                }else{
                    JOptionPane.showMessageDialog(null, "Dados inseridos com sucesso!");
                    System.out.println("Teste sucesso");
                    jTextEmail.setText("");
                    jTextNome.setText("");
                    jPassSenha.setText("");
                    jComboAdm.setSelectedIndex(0);
                    jComboSerie.setSelectedIndex(0);
                    popularTabelaPessoas();
                }
                
            } catch (Exception e) {
                System.out.println("Erro no try");
            }
        }
    }//GEN-LAST:event_btnSalvarPessoaActionPerformed

    private void jTextNomePesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNomePesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNomePesquisaActionPerformed

    private void jTextNomePesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextNomePesquisaKeyPressed
        try {
            popularTabelaPessoas();
        } catch (SQLException ex) {
            Logger.getLogger(ListPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTextNomePesquisaKeyPressed

    private void jComboTipoPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboTipoPessoaActionPerformed
        try {
            popularTabelaPessoas();
        } catch (SQLException ex) {
            Logger.getLogger(ListPessoas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jComboTipoPessoaActionPerformed

    private void bntExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntExcluirActionPerformed
        int linha = tabelaPessoa.getSelectedRow();
        String id = tabelaPessoa.getValueAt(linha, 0).toString();

        int confirmacao = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente excluir a linha?");

        if(confirmacao == 0){
            try {
                Conexao con = new Conexao();
                Statement st = con.conexao.createStatement();
                String sqlDelete = "DELETE FROM pessoas WHERE id = " +id;

                if(st.execute(sqlDelete)){
                    JOptionPane.showMessageDialog(null, "Não foi possível excluir a linha!");
                }else{
                    JOptionPane.showMessageDialog(null, "Deletado com sucesso!");
                    popularTabelaPessoas();
                }

            } catch (SQLException ex) {
                Logger.getLogger(ListPessoas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_bntExcluirActionPerformed

    private void tabelaPessoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPessoaMouseClicked
        bntExcluir.setEnabled(true);
        bntEditar.setEnabled(true);
        btnSalvarPessoa.setEnabled(false);
        jPassSenha.setEnabled(false);
        jComboAdm.setEnabled(false);
        
        int row = tabelaPessoa.getSelectedRow();
        
        String id = tabelaPessoa.getValueAt(row, 0).toString();
        String nome = tabelaPessoa.getValueAt(row, 1).toString();
        String email = tabelaPessoa.getValueAt(row, 2).toString();
        String serie = tabelaPessoa.getValueAt(row, 3).toString();
        
        jTextNome.setText(nome);
        jTextEmail.setText(email);
        jComboSerie.setSelectedItem(serie);
        
    }//GEN-LAST:event_tabelaPessoaMouseClicked

    private void bntEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntEditarActionPerformed
        int row= tabelaPessoa.getSelectedRow();
        String id = tabelaPessoa.getValueAt(row, 0).toString();
        
        String nome = jTextNome.getText();
        String email = jTextEmail.getText();
        
        String serie = jComboSerie.getSelectedItem().toString();
        
        try {
            Conexao con = new Conexao();
            Statement st = con.conexao.createStatement();
            String sql = "UPDATE pessoas SET "
                + "nome='"+nome+"',"
                + "email='"+email+"',"
                + "serie='"+serie+"'"
                +" WHERE id="+id;
            
            
            if(st.executeUpdate(sql)==1){
                JOptionPane.showMessageDialog(null, "Dados alterados");
                popularTabelaPessoas();
                bntEditar.setEnabled(false);
                bntExcluir.setEnabled(false);
                btnSalvarPessoa.setEnabled(true);
                jPassSenha.setEnabled(true);
                jComboAdm.setEnabled(true);
            }else{
                JOptionPane.showMessageDialog(null, "Erro ao alterar");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(CadPessoa.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bntEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadPessoa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CadPessoa().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CadPessoa.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntEditar;
    private javax.swing.JButton bntExcluir;
    private javax.swing.JButton btnSalvarPessoa;
    private javax.swing.JComboBox<String> jComboAdm;
    private javax.swing.JComboBox<String> jComboSerie;
    private javax.swing.JComboBox<String> jComboTipoPessoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPassSenha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextEmail;
    private javax.swing.JTextField jTextNome;
    private javax.swing.JTextField jTextNomePesquisa;
    private javax.swing.JTable tabelaPessoa;
    // End of variables declaration//GEN-END:variables
public void popularTabelaPessoas() throws SQLException{
        String nomeBuscado = jTextNomePesquisa.getText();
        String tipoPessoa = jComboTipoPessoa.getSelectedItem().toString();
        
        
        
        DefaultTableModel model = (DefaultTableModel) tabelaPessoa.getModel();  
        model.setNumRows(0);
        
        Conexao con = new Conexao();        
        
        Statement st = con.conexao.createStatement();
        
        String sql = "SELECT * FROM pessoas";
        
        if(!nomeBuscado.isEmpty() && !tipoPessoa.equals("Tipo pessoa")){
            sql += " WHERE nome LIKE '" + nomeBuscado+"%' AND serie = '"+tipoPessoa+"'";
        }else if(!tipoPessoa.equals("Tipo pessoa")){
            sql += " WHERE serie = '"+tipoPessoa+"'";
        }else if(!nomeBuscado.isEmpty()){
            sql += " WHERE nome LIKE '" + nomeBuscado+"%'";
        }
        
        ResultSet resultado = st.executeQuery(sql);
        
        while(resultado.next()){
            model.addRow(new Object[]{
                resultado.getString("id"),
                resultado.getString("nome"),
                resultado.getString("email"),
                resultado.getString("serie"),
            });
        }
        
    }

public void limparCampos(){
    jTextNome.setText("");
    jTextEmail.setText("");
    jPassSenha.setText("");
    jComboAdm.setSelectedIndex(0);
    jComboSerie.setSelectedIndex(0);
    jComboTipoPessoa.setSelectedIndex(0);
   
}

}
